#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
%define keepstatic 1
Name     : libsndfile
Version  : 1.0.29
Release  : 31
URL      : file:///insilications/build/clearlinux/packages/libsndfile/libsndfile-v1.0.29.zip
Source0  : file:///insilications/build/clearlinux/packages/libsndfile/libsndfile-v1.0.29.zip
Summary  : A library for reading and writing audio files
Group    : Development/Tools
License  : zlib-acknowledgement
Requires: libsndfile-bin = %{version}-%{release}
Requires: libsndfile-lib = %{version}-%{release}
Requires: libsndfile-man = %{version}-%{release}
BuildRequires : alsa-lib-dev
BuildRequires : alsa-lib-dev32
BuildRequires : autogen
BuildRequires : autogen-dev
BuildRequires : automake
BuildRequires : automake-dev
BuildRequires : buildreq-configure
BuildRequires : buildreq-make
BuildRequires : findutils
BuildRequires : flac-dev
BuildRequires : flac-dev32
BuildRequires : flac-staticdev
BuildRequires : flac-staticdev32
BuildRequires : gcc-dev32
BuildRequires : gcc-libgcc32
BuildRequires : gcc-libstdc++32
BuildRequires : glibc-dev32
BuildRequires : glibc-libc32
BuildRequires : libogg-dev
BuildRequires : libogg-dev32
BuildRequires : libogg-staticdev
BuildRequires : libogg-staticdev32
BuildRequires : libvorbis-dev
BuildRequires : libvorbis-dev32
BuildRequires : libvorbis-staticdev
BuildRequires : libvorbis-staticdev32
BuildRequires : octave-dev
BuildRequires : pkg-config
BuildRequires : pkgconfig(32alsa)
BuildRequires : pkgconfig(alsa)
BuildRequires : pkgconfig(flac)
BuildRequires : pkgconfig(flac++)
BuildRequires : pkgconfig(ogg)
BuildRequires : pkgconfig(vorbis)
BuildRequires : pkgconfig(vorbisenc)
BuildRequires : pkgconfig(vorbisfile)
BuildRequires : python3
BuildRequires : python3-dev
BuildRequires : python3-staticdev
BuildRequires : sed
BuildRequires : sqlite-autoconf-dev
BuildRequires : sqlite-autoconf-dev32
# Suppress stripping binaries
%define __strip /bin/true
%define debug_package %{nil}

%description
This is libsndfile, 1.0.29
libsndfile is a library of C routines for reading and writing
files containing sampled audio data.

%package bin
Summary: bin components for the libsndfile package.
Group: Binaries

%description bin
bin components for the libsndfile package.


%package dev
Summary: dev components for the libsndfile package.
Group: Development
Requires: libsndfile-lib = %{version}-%{release}
Requires: libsndfile-bin = %{version}-%{release}
Provides: libsndfile-devel = %{version}-%{release}
Requires: libsndfile = %{version}-%{release}

%description dev
dev components for the libsndfile package.


%package dev32
Summary: dev32 components for the libsndfile package.
Group: Default
Requires: libsndfile-lib32 = %{version}-%{release}
Requires: libsndfile-bin = %{version}-%{release}
Requires: libsndfile-dev = %{version}-%{release}

%description dev32
dev32 components for the libsndfile package.


%package doc
Summary: doc components for the libsndfile package.
Group: Documentation
Requires: libsndfile-man = %{version}-%{release}

%description doc
doc components for the libsndfile package.


%package extras
Summary: extras components for the libsndfile package.
Group: Default

%description extras
extras components for the libsndfile package.


%package lib
Summary: lib components for the libsndfile package.
Group: Libraries

%description lib
lib components for the libsndfile package.


%package lib32
Summary: lib32 components for the libsndfile package.
Group: Default

%description lib32
lib32 components for the libsndfile package.


%package man
Summary: man components for the libsndfile package.
Group: Default

%description man
man components for the libsndfile package.


%package staticdev
Summary: staticdev components for the libsndfile package.
Group: Default
Requires: libsndfile-dev = %{version}-%{release}

%description staticdev
staticdev components for the libsndfile package.


%package staticdev32
Summary: staticdev32 components for the libsndfile package.
Group: Default
Requires: libsndfile-dev = %{version}-%{release}

%description staticdev32
staticdev32 components for the libsndfile package.


%prep
%setup -q -n libsndfile-v1.0.29
cd %{_builddir}/libsndfile-v1.0.29
pushd ..
cp -a libsndfile-v1.0.29 build32
popd

%build
unset http_proxy
unset https_proxy
unset no_proxy
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1597923293
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
## altflags_pgo content
## pgo generate
export PGO_GEN="-fprofile-generate=/var/tmp/pgo -fprofile-dir=/var/tmp/pgo -fprofile-abs-path -fprofile-update=atomic -fprofile-arcs -ftest-coverage --coverage -fprofile-partial-training"
export CFLAGS_GENERATE="-O3 -march=native -mtune=native -falign-functions=32 -flimit-function-alignment -fno-semantic-interposition -fno-stack-protector -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -mtls-dialect=gnu2 -fno-math-errno -fno-trapping-math -pipe $PGO_GEN"
export FCFLAGS_GENERATE="-O3 -march=native -mtune=native -falign-functions=32 -flimit-function-alignment -fno-semantic-interposition -fno-stack-protector -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -mtls-dialect=gnu2 -fno-math-errno -fno-trapping-math -pipe $PGO_GEN"
export FFLAGS_GENERATE="-O3 -march=native -mtune=native -falign-functions=32 -flimit-function-alignment -fno-semantic-interposition -fno-stack-protector -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -mtls-dialect=gnu2 -fno-math-errno -fno-trapping-math -pipe $PGO_GEN"
export CXXFLAGS_GENERATE="-O3 -march=native -mtune=native -falign-functions=32 -flimit-function-alignment -fno-semantic-interposition -fno-stack-protector -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -mtls-dialect=gnu2 -fno-math-errno -fno-trapping-math -fvisibility-inlines-hidden -pipe $PGO_GEN"
export LDFLAGS_GENERATE="-O3 -march=native -mtune=native -falign-functions=32 -flimit-function-alignment -fno-semantic-interposition -fno-stack-protector -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -mtls-dialect=gnu2 -fno-math-errno -fno-trapping-math -pipe $PGO_GEN"
## pgo use
## -ffat-lto-objects -fno-PIE -fno-PIE -m64 -no-pie -fpic -fvisibility=hidden -flto-partition=none
## gcc: -feliminate-unused-debug-types -fipa-pta -flto=16 -Wno-error -Wp,-D_REENTRANT -fno-common
export PGO_USE="-fprofile-use=/var/tmp/pgo -fprofile-dir=/var/tmp/pgo -fprofile-abs-path -fprofile-correction -fprofile-partial-training"
export CFLAGS_USE="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -fno-plt -mtls-dialect=gnu2 -Wl,-sort-common -Wno-error -Wp,-D_REENTRANT -pipe $PGO_USE"
export FCFLAGS_USE="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -fno-plt -mtls-dialect=gnu2 -Wl,-sort-common -Wno-error -Wp,-D_REENTRANT -pipe $PGO_USE"
export FFLAGS_USE="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -fno-plt -mtls-dialect=gnu2 -Wl,-sort-common -Wno-error -Wp,-D_REENTRANT -pipe $PGO_USE"
export CXXFLAGS_USE="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -fno-plt -mtls-dialect=gnu2 -Wl,-sort-common -Wno-error -Wp,-D_REENTRANT -fvisibility-inlines-hidden -pipe $PGO_USE"
export LDFLAGS_USE="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -fno-plt -mtls-dialect=gnu2 -Wl,-sort-common -Wno-error -Wp,-D_REENTRANT -pipe $PGO_USE"
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
#export CCACHE_DISABLE=1
## altflags_pgo end
export CFLAGS="${CFLAGS_GENERATE}"
export CXXFLAGS="${CXXFLAGS_GENERATE}"
export FFLAGS="${FFLAGS_GENERATE}"
export FCFLAGS="${FCFLAGS_GENERATE}"
export LDFLAGS="${LDFLAGS_GENERATE}"
%autogen  --enable-shared --enable-static
make  %{?_smp_mflags}

make VERBOSE=1 V=1 %{?_smp_mflags} check || :
make clean
export CFLAGS="${CFLAGS_USE}"
export CXXFLAGS="${CXXFLAGS_USE}"
export FFLAGS="${FFLAGS_USE}"
export FCFLAGS="${FCFLAGS_USE}"
export LDFLAGS="${LDFLAGS_USE}"
%autogen   --enable-shared --enable-static
make  %{?_smp_mflags}

pushd ../build32/
export CFLAGS="-g -O3 -fuse-linker-plugin -pipe"
export CXXFLAGS="-g -O3 -fuse-linker-plugin -fvisibility-inlines-hidden -pipe"
export LDFLAGS="-g -O3 -fuse-linker-plugin -pipe"
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
export ASFLAGS="${ASFLAGS}${ASFLAGS:+ }--32"
export CFLAGS="${CFLAGS}${CFLAGS:+ }-m32 -mstackrealign"
export CXXFLAGS="${CXXFLAGS}${CXXFLAGS:+ }-m32 -mstackrealign"
export LDFLAGS="${LDFLAGS}${LDFLAGS:+ }-m32 -mstackrealign"
%autogen   --disable-octave --libdir=/usr/lib32 --build=i686-generic-linux-gnu --host=i686-generic-linux-gnu --target=i686-clr-linux-gnu
make  %{?_smp_mflags}
popd

%check
export LANG=C.UTF-8
unset http_proxy
unset https_proxy
unset no_proxy
make %{?_smp_mflags} check || :
cd ../build32;
make %{?_smp_mflags} check || : || :

%install
export SOURCE_DATE_EPOCH=1597923293
rm -rf %{buildroot}
pushd ../build32/
%make_install32
if [ -d  %{buildroot}/usr/lib32/pkgconfig ]
then
pushd %{buildroot}/usr/lib32/pkgconfig
for i in *.pc ; do ln -s $i 32$i ; done
popd
fi
popd
%make_install
## install_append content
#rm -f %{buildroot}/usr/include/sndfile.hh
## install_append end

%files
%defattr(-,root,root,-)

%files bin
%defattr(-,root,root,-)
/usr/bin/sndfile-cmp
/usr/bin/sndfile-concat
/usr/bin/sndfile-convert
/usr/bin/sndfile-deinterleave
/usr/bin/sndfile-info
/usr/bin/sndfile-interleave
/usr/bin/sndfile-metadata-get
/usr/bin/sndfile-metadata-set
/usr/bin/sndfile-play
/usr/bin/sndfile-salvage

%files dev
%defattr(-,root,root,-)
/usr/include/sndfile.h
/usr/lib64/libsndfile.so
/usr/lib64/pkgconfig/sndfile.pc

%files dev32
%defattr(-,root,root,-)
/usr/lib32/libsndfile.so
/usr/lib32/pkgconfig/32sndfile.pc
/usr/lib32/pkgconfig/sndfile.pc

%files doc
%defattr(0644,root,root,0755)
%doc /usr/share/doc/libsndfile/*

%files extras
%defattr(-,root,root,-)
/usr/include/sndfile.hh

%files lib
%defattr(-,root,root,-)
/usr/lib64/libsndfile.so.1
/usr/lib64/libsndfile.so.1.0.29

%files lib32
%defattr(-,root,root,-)
/usr/lib32/libsndfile.so.1
/usr/lib32/libsndfile.so.1.0.29

%files man
%defattr(0644,root,root,0755)
/usr/share/man/man1/sndfile-cmp.1
/usr/share/man/man1/sndfile-concat.1
/usr/share/man/man1/sndfile-convert.1
/usr/share/man/man1/sndfile-deinterleave.1
/usr/share/man/man1/sndfile-info.1
/usr/share/man/man1/sndfile-interleave.1
/usr/share/man/man1/sndfile-metadata-get.1
/usr/share/man/man1/sndfile-metadata-set.1
/usr/share/man/man1/sndfile-play.1
/usr/share/man/man1/sndfile-salvage.1

%files staticdev
%defattr(-,root,root,-)
/usr/lib64/libsndfile.a

%files staticdev32
%defattr(-,root,root,-)
/usr/lib32/libsndfile.a
